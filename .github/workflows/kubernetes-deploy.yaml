name: NodeJs Deployment Workflow

on:
  push:
    branches: ["*"]

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ (github.ref == 'refs/heads/main' && 'dev') || (github.ref == 'refs/heads/prod' && 'production') }}

    steps:
      - name: AWS Loggin
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.IAM_ROLE }}
          aws-region: "us-east-1"

      - name: Clone repo 
        uses: actions/checkout@v4

      - name: Login to ECR
        id: login-to-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # - name: Build, tag, and push frontend docker image to Amazon ECR
      #   env:
      #     REGISTRY: ${{ steps.login-to-ecr.outputs.registry }}
      #     REPOSITORY: web-frontend
      #     IMAGE_TAG: 0.1
      #   working-directory: ./web
      #   run: |
      #     docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
      #     docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
      
      # - name: Build, tag, and push Backend docker image to Amazon ECR
      #   env:
      #     REGISTRY: ${{ steps.login-to-ecr.outputs.registry }}
      #     REPOSITORY: api-backend
      #     IMAGE_TAG: 0.1
      #   working-directory: ./api
      #   run: |
      #     docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
      #     docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Login to EKS
        run: aws eks update-kubeconfig --region us-east-1 --name project-x-dev

      - name: Create namespace
        run: kubectl create namespace sample-app || true

      # - name: Install NGINX Ingress Controller
      #   run: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.10.1/deploy/static/provider/cloud/deploy.yaml

      - name: Deploy frontend with Helm
        run: helm upgrade --install nodejs-frontend ./helm-chart --values ./helm-chart/values/frontend/dev-value.yaml --namespace sample-app

      - name: Deploy backend with Helm
        run: helm upgrade --install nodejs-backend ./helm-chart --values ./helm-chart/values/backend/dev-value.yaml --namespace sample-app

      # Commented steps for future use
      # - name: deploy frontend by YAML file
      #   run: kubectl apply -f node-js-app/front.yaml

      # - name: deploy backend by YAML file
      #   run: kubectl apply -f node-js-app/back.yaml

      # - name: deploy database by YAML file
      #   run: kubectl apply -f node-js-app/database.yaml

      # - name: ingress rules
      #   run: kubectl apply -f node-js-app/ingress.yaml

  destroy:
    runs-on: ubuntu-latest

    steps:
      - name: AWS Loggin
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.IAM_ROLE }}
          aws-region: "us-east-1"

      - name: Login to EKS
        run: aws eks update-kubeconfig --region us-east-1 --name project-x-dev

      - name: Destroy frontend deployment
        run: helm uninstall nodejs-frontend --namespace sample-app || true

      - name: Destroy backend deployment
        run: helm uninstall nodejs-backend --namespace sample-app || true

      - name: Delete namespace
        run: kubectl delete namespace sample-app || true

      - name: Logout from ECR
        run: aws ecr logout --region us-east-1
