# name of the Workflow
name: "CI/CD pipeline with a NodeJS app"

on:
  push:
    branches:
    - main
    - staging
    - dev

permissions:
  id-token: write 
  contents: read 

env:
  # create new variable with custom dynamic value depending on branch name
  ENVIRONMENT_STAGE: ${{ (github.ref == 'refs/heads/main' && 'production') || (github.ref == 'refs/heads/staging' && 'staging') || 'dev' }}

jobs:
  # name of the job
  build-deploy:
    # where to run the job, if GHA runner - just specify image name
    runs-on: ubuntu-latest
    environment: ${{ (github.ref == 'refs/heads/main' && 'production') || (github.ref == 'refs/heads/staging' && 'staging') || 'dev' }}

    # any instructions to execute
    steps:
    - name: Checkout Repository
      # "uses" allows you to specify ready action names
      uses: actions/checkout@v4

    - name: Login to AWS
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: ${{ secrets.IAM_ROLE }}
        role-session-name: githubactionssession
        aws-region: "us-east-1"

    - name: Login to ECR
      id: login-to-ecr
      uses: aws-actions/amazon-ecr-login@v2

    # Commented out for now
    # - name: Build, tag, and push backend docker image to Amazon ECR
    #   env:
    #     REGISTRY: ${{ steps.login-to-ecr.outputs.registry }}
    #     REPOSITORY: nodejs-backend
    #     IMAGE_TAG: ${{ github.sha }}
    #   working-directory: ./api/
    #   run: |
    #     docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
    #     docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

    # Commented out for now
    # - name: Build, tag, and push frontend docker image to Amazon ECR
    #   env:
    #     REGISTRY: ${{ steps.login-to-ecr.outputs.registry }}
    #     REPOSITORY: nodejs-frontend
    #     IMAGE_TAG: ${{ github.sha }}
    #   working-directory: ./web/
    #   run: |
    #     docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
    #     docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

    - name: Loging to EKS
      run: aws eks update-kubeconfig --name project-x-${ENVIRONMENT_STAGE}

    # installing ingress-nginx Helm repository for ingress-controller
    - name: Add ingress-nginx Helm repository
      run: |
        helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
        helm repo update
        
    # installing the ingress-controller
    - name: Install NGINX Ingress controller
      run: |
        helm upgrade --install ingress-nginx ingress-nginx/ingress-nginx \
          # --namespace kube-system --create-namespace

    # Commented out for now
    # - name: Deploy Backend to Kubernetes
    #   env:
    #     IMAGE_TAG: ${{ github.sha }}
    #   run: |
    #     helm upgrade --install api ./helm-chart/ \
    #       --values ./helm-chart/values/backend/${ENVIRONMENT_STAGE}-values.yaml \
    #       --set image.tag="$IMAGE_TAG" \
    #       --namespace nodejs-app --create-namespace

    # Commented out for now
    # - name: Deploy Frontend to Kubernetes
    #   env:
    #     IMAGE_TAG: ${{ github.sha }}
    #   run: |
    #     helm upgrade --install web ./helm-chart/ \
    #       --values ./helm-chart/values/frontend/${ENVIRONMENT_STAGE}-values.yaml \
    #       --set image.tag="$IMAGE_TAG" \
    #       --namespace nodejs-app --create-namespace
